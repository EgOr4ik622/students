def main():
    print("Укажите путь к файлу json c данными о students:")
    file_path_students = input()
    print("Укажите путь к файлу json c данными o rooms:")
    file_path_rooms = input()
    print("Выберите формат данных для выгрузки:")
    print("1 - JSON")
    print("2 - XML")
    choice = input("Введите номер выбора (1 или 2): ")
    name_db = input('Введите название БД: ')
    name_tb = input('Введите название таблицы студентов: ')
    name_room_tb = input('Введите название таблицы комнат: ')
    name_db_default = os.getenv('name_db_default')
    user = os.getenv('user')
    password = os.getenv('password')
    host = os.getenv('host')

    # Инициализация менеджера базы данных
    db_manager = DatabaseManager("postgres", "postgres", "egor4ic", "127.0.0.1")

    # Создание базы данных и таблицы
    db_manager.create_database(name_db)
    db_manager = DatabaseManager(name_db, "postgres", "egor4ic", "127.0.0.1")
    db_manager.create_students_table(name_tb)
    db_manager.create_second_table(name_room_tb)

    # Импорт данных
    importer = DataImporter(db_manager)
    importer.import_from_json_students(file_path_students, name_tb)
    importer.import_from_json_rooms(file_path_rooms, name_room_tb)

    # Анализ данных
    stats = RoomStatistics(db_manager, name_tb, name_room_tb)
    exporter = DataExporter()

    # 1. Комнаты с наибольшей разницей в возрасте
    age_diff_data = stats.get_top_rooms_by_age_difference()
    if choice == '1':
        result = [{"name": row[0],
        } for row in age_diff_data]
        exporter.export_to_json(result, 'different_age.json')
    elif choice == '2':
        exporter.export_to_xml(
            age_diff_data,
            'different_age.xml',
            "RoomsStatistics",
            "Room",
            ["room_name"]
        )
    else:
        print("ВВЕДЕН НЕВЕРНЫЕ ФОРМАТ ДАННЫХ")

    # 2. Комнаты с максимальным средним возрастом
    avg_age_data = stats.get_top_rooms_by_avg_age()
    if choice == '1':
        result = [{"room_name": room} for room in avg_age_data]
        exporter.export_to_json(result, 'avg_min.json')
    elif choice == '2':
        exporter.export_to_xml(
            avg_age_data,
            'avg_min.xml',
            "RoomsStatistics",
            "Room",
            ["room_name"]
        )
    else:
        print("ВВЕДЕН НЕВЕРНЫЕ ФОРМАТ ДАННЫХ")

    # 3. Комнаты с разнополыми жильцами
    mixed_sex_data = stats.get_rooms_with_mixed_sex()
    if choice == '1':
        result = [{"room_name": room[0]} for room in mixed_sex_data]
        exporter.export_to_json(result, 'different_sex.json')
    elif choice == '2':
        exporter.export_to_xml(
            mixed_sex_data,
            'different_sex.xml',
            "RoomsStatistics",
            "Room",
            ["room_name"]
        )
    else:
        print("ВВЕДЕН НЕВЕРНЫЕ ФОРМАТ ДАННЫХ")

    # 4. Комнаты с количеством жильцов
    room_students_data = stats.get_rooms_with_student_count()
    if choice == '1':
        result = [{"room_name": room, "residents_count": count} for room, count in room_students_data]
        exporter.export_to_json(result, 'room_students.json')
    elif choice == '2':
        exporter.export_to_xml(
            room_students_data,
            'room_students.xml',
            "RoomsStatistics",
            "Room",
            ["room_name", "residents_count"]
        )
    else:
        print("ВВЕДЕН НЕВЕРНЫЕ ФОРМАТ ДАННЫХ")


if __name__ == "__main__":
    main()
